name: Publish OCR-D Manager

on:
  workflow_dispatch:
    inputs:
      checkout-ref:
        description: The branch, tag or SHA to checkout. Otherwise, uses the default branch.
      image-tag:
        description: Tag name of Docker image
        default: 'latest'

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout without input reference (default)
      uses: actions/checkout@v3
      if: github.event.inputs.checkout-ref == ''
    
    - name: Checkout input reference ${{ github.event.inputs.checkout-ref }}
      uses: actions/checkout@v3
      if: github.event.inputs.checkout-ref != ''
      with:
        ref: ${{ github.event.inputs.checkout-ref }}

    - # Activate cache export feature to reduce build time of images
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

#    - name: Login to GitHub Container Registry
#      uses: docker/login-action@v2
#      with:
#        registry: ghcr.io
#       username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine build args
      run: |
        date -u +"build_date=%Y-%m-%dT%H:%M:%SZ" >> $GITHUB_ENV
        echo "vcs_ref=`git rev-parse --short HEAD`" >> $GITHUB_ENV

    - name: Check package version
      run: |
        manifest=$(curl -X GET https://docker.pkg.github.com/v2/{org}/{repo}/{image name}/manifests/$GITHUB_SHA -u $GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }} | jq '.')
        echo $manifest

#    - name: Build the OCR-D Manager image (ghcr.io/slub/ocrd_manager:${{ github.event.inputs.image-tag }})  and deploy to GitHub Container Repository
#      uses: docker/build-push-action@v4
#      with:
#        context: .
#        push: true
#        tags: ghcr.io/slub/ocrd_manager:${{ github.event.inputs.image-tag }}
#        build-args: |
#          BUILD_DATE=${{ env.build_date }}
#          VCS_REF=${{ env.vcs_ref }}
#        cache-from: type=gha
#        cache-to: type=gha,mode=max
